version: '3.8'
services:
  nginx-reverse-proxy:
    image: nginx:latest 
    container_name: nginx-reverse-proxy
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
     - './nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro'
     - './nginx-proxy/ssl:/ssl/:rw'
    networks:
      - sas_network
    depends_on:
      - backend
      - frontend
  backend:
    container_name: backend
    image: 'back_sas_img:1'
    build:
      context: ..
      dockerfile: >-
        ./kw1_BingChilling_Infrastructure/dockerfiles/backend_multistage_dockerfile
    ports:
      - '8080:8080'
    depends_on:
      - mysql
    networks:
      - sas_network
      - sas_data
    restart: unless-stopped
  mysql:
    image: 'mysql:8.0.33'
    container_name: dbserver
    environment:
      - MYSQL_ROOT_PASSWORD=123
      - LANG="en_US.UTF-8"
      - TZ="UTC"
      - MYSQL_USER=dev1
      - MYSQL_PASSWORD=123
      - MYSQL_DATABASE=sqlserversas
    volumes:
      - '/sas/mysql:/var/lib/mysql'
    networks:
      - sas_data
    ports:
      - '3306:3306'
    restart: unless-stopped
  frontend:
    container_name: frontend
    restart: unless-stopped
    image: 'front_sas_img:1'
    build:
      context: ..
      dockerfile: >-
        ./kw1_BingChilling_Infrastructure/dockerfiles/frontend_multistage_dockerfile
    networks:
      - sas_network
    ports:
      - '800:80'
    depends_on:
      - backend
    environment:
      VIRTUAL_HOST: intproj22.sit.kmutt.ac.th/kw1
      LETSENCRYPT_HOST: intproj22.sit.kmutt.ac.th/kw1
networks:
  sas_network: null
  sas_data: null
